{"version":3,"sources":["webpack:///./src/app/generic-document-recognizer-results/generic-document-recognizer-results.module.ts","webpack:///./src/app/generic-document-recognizer-results/generic-document-recognizer-results.page.html","webpack:///./src/app/generic-document-recognizer-results/generic-document-recognizer-results.page.scss","webpack:///./src/app/generic-document-recognizer-results/generic-document-recognizer-results.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEqD;AAElG,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8GAAoC;KAChD;CACF,CAAC;AAWF;IAAA;IAAyD,CAAC;IAA7C,0CAA0C;QATtD,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,8GAAoC,CAAC;SACrD,CAAC;OACW,0CAA0C,CAAG;IAAD,iDAAC;CAAA;AAAH;;;;;;;;;;;;ACzBvD,qOAAqO,cAAc,kKAAkK,YAAY,aAAa,oBAAoB,0EAA0E,iBAAiB,wBAAwB,oHAAoH,4CAA4C,qDAAqD,kBAAkB,kBAAkB,KAAK,UAAU,8DAA8D,kBAAkB,kBAAkB,2BAA2B,YAAY,8F;;;;;;;;;;;ACAt8B,+DAA+D,mN;;;;;;;;;;;;;;;;;;;ACArB;AACwE;AACzD;AAOzD;IAOI,8CAAmB,SAAuB;QAAvB,cAAS,GAAT,SAAS,CAAc;QACtC,IAAI,CAAC,MAAM,GAAG,6HAAuC,CAAC,MAAM,CAAC;QAC7D,IAAI,CAAC,YAAY,GAAG,6HAAuC,CAAC,YAAY,CAAC;QACzE,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,8DAAe,GAAvB;QAAA,iBA0BC;QAzBG,2CAA2C;QAC3C,IAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;QAChD,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;SACvD;QAED,+CAA+C;QAC/C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG;YACjC,IAAM,KAAK,GAAG,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC/B,IAAI,GAAG,CAAC;YAER,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;gBACf,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;gBACpB,IAAI,KAAK,CAAC,YAAY,CAAC,EAAE;oBACrB,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,GAAG,CAAC,CAAC;oBACvD,GAAG,IAAI,iBAAiB,GAAG,UAAU,GAAG,IAAI,CAAC;iBAChD;aACJ;iBAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,YAAY,MAAM,EAAE;gBAC7D,GAAG,GAAG,KAAK,CAAC;aACf;YAED,IAAI,GAAG,EAAE;gBACL,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;aACjC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,8DAAe,GAAvB,UAAwB,OAAe;QACnC,sEAAsE;QACtE,IAAM,YAAY,GAAI,MAAc,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC3E,6DAA6D;QAC7D,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,YAAY,CAAW,CAAC;IACzE,CAAC;IA/CQ,oCAAoC;QALhD,+DAAS,CAAC;YACP,QAAQ,EAAE,yCAAyC;YACnD,mLAA8D;;SAEjE,CAAC;+EAQgC,sEAAY;OAPjC,oCAAoC,CAgDhD;IAAD,2CAAC;CAAA;AAhDgD","file":"generic-document-recognizer-results-generic-document-recognizer-results-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GenericDocumentRecognizerResultsPage } from './generic-document-recognizer-results.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GenericDocumentRecognizerResultsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [GenericDocumentRecognizerResultsPage]\n})\nexport class GenericDocumentRecognizerResultsPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n      </ion-buttons>\\n      <ion-title  *ngIf=\\\"documentType\\\" >\\n        {{documentType}} Generic Document Recognizer Results \\n      </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <div *ngIf=\\\"photoUri\\\" style=\\\"margin: 1%; width: 98%; height: 50%; text-align: center; background-color: rgb(245, 245, 245)\\\">\\n    <img style=\\\"max-width:100%; max-height:100%; vertical-align: middle;\\\" [src]=\\\"photoUri\\\"/>\\n  </div>\\n\\n  <li *ngFor=\\\"let item of displayFields | keyvalue\\\" style=\\\"list-style: none;\\\">\\n      <ion-item style=\\\"display: block;\\\">\\n          <ion-label style=\\\"margin-left: 0.5em; font-size: 0.8em; font-weight: 600;\\\">{{item.key}}</ion-label>\\n          <ion-label style=\\\"margin-left: 0.5em; font-size: 0.8em; font-weight: 400; white-space: pre-wrap\\\">{{item.value}}</ion-label>\\n      </ion-item>\\n  </li>\\n\\n</ion-content>\\n\\n<ion-footer>\\n\\n</ion-footer>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dlbmVyaWMtZG9jdW1lbnQtcmVjb2duaXplci1yZXN1bHRzL2dlbmVyaWMtZG9jdW1lbnQtcmVjb2duaXplci1yZXN1bHRzLnBhZ2Uuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { GenericDocumentRecognizerResultsService } from '../services/generic-document-recognizer-results.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n    selector: 'app-generic-document-recognizer-results',\n    templateUrl: './generic-document-recognizer-results.page.html',\n    styleUrls: ['./generic-document-recognizer-results.page.scss'],\n})\nexport class GenericDocumentRecognizerResultsPage {\n\n    fields: any;\n    documentType: string;\n    displayFields: {};\n    photoUri: string;\n\n    constructor(public sanitizer: DomSanitizer) {\n        this.fields = GenericDocumentRecognizerResultsService.fields;\n        this.documentType = GenericDocumentRecognizerResultsService.documentType;\n        this.displayFields = {};\n        this.setupProperties();\n    }\n\n    private setupProperties() {\n        // Setup Photo Image URI from result Fields\n        const photoImageUri = this.fields.photoImageUri;\n        if (photoImageUri) {\n            this.photoUri = this.sanitizeFileUri(photoImageUri);\n        }\n\n        // Setup Key - Value entries from result Fields\n        Object.keys(this.fields).forEach((key) => {\n            const value = this.fields[key];\n            let out;\n\n            if (value[\"text\"]) {\n                out = value[\"text\"];\n                if (value[\"confidence\"]) {\n                    let percentage = Math.round(value[\"confidence\"] * 100);\n                    out += \"\\n(confidence: \" + percentage + \"%)\";\n                }\n            } else if (typeof value === 'string' || value instanceof String) {\n                out = value;\n            }\n\n            if (out) {\n                this.displayFields[key] = out;\n            }\n        });\n    }\n\n    private sanitizeFileUri(fileUri: string): string {\n        // see https://ionicframework.com/docs/building/webview/#file-protocol\n        const convertedUri = (window as any).Ionic.WebView.convertFileSrc(fileUri);\n        // see https://angular.io/guide/security#bypass-security-apis\n        return this.sanitizer.bypassSecurityTrustUrl(convertedUri) as string;\n    }\n}\n"],"sourceRoot":""}