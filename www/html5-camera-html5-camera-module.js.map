{"version":3,"sources":["webpack:///./node_modules/cordova-plugin-scanbot-sdk/camera.js","webpack:///./src/app/html5-camera/html5-camera.module.ts","webpack:///./src/app/html5-camera/html5-camera.page.html","webpack:///./src/app/html5-camera/html5-camera.page.scss","webpack:///./src/app/html5-camera/html5-camera.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS,4BAA4B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,QAAQ;AACrF;AACA;AACA,yDAAyD;AACzD;AACA;AACA,mEAAmE,oCAAoC,EAAE;AACzG;AACA;AACA,6BAA6B;AAC7B,yBAAyB,EAAE,EAAE;AAC7B,+DAA+D,oCAAoC,EAAE;AACrG,yBAAyB;AACzB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD,kDAAkD,8BAA8B;AAChF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC3PyC;AACM;AACF;AACU;AAEV;AAES;AAEtD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAe;KAC3B;CACF,CAAC;AAWF;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QATjC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,kEAAe,CAAC;SAChC,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBlC,2qBAA2qB,eAAe,oCAAoC,aAAa,2B;;;;;;;;;;;ACA3uB,8BAA8B,eAAe,kBAAkB,oBAAoB,oBAAoB,2BAA2B,uBAAuB,GAAG,yBAAyB,qBAAqB,sBAAsB,GAAG,6CAA6C,2jC;;;;;;;;;;;;;;;;;;;;;;ACAxN;AACU;AACS;AAChB;AACS;AACpE,+DAA+D;AAC/D,sFAAsF;AAOtF;IAOE,yBAAoB,GAA0B,EAAU,KAAqB,EAAU,OAAe;QAAlF,QAAG,GAAH,GAAG,CAAuB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,YAAO,GAAP,OAAO,CAAQ;QAClG,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAEK,kCAAQ,GAAd;;;;;;4BAG2B,qBAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,uBAAuB,EAAE;;wBAA/D,gBAAgB,GAAG,SAA4C;6BACjE,iBAAgB,CAAC,MAAM,KAAK,IAAI,GAAhC,wBAAgC;wBAClC,qBAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;;;gDACrB,qBAAM,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,uDAAuD,EAAE,OAAO,CAAC;;4CAA5F,SAA4F,CAAC;;;;iCAC9F,CAAC;;wBAFF,SAEE,CAAC;wBACH,sBAAO;;wBAGT,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;;;;;KACvD;IAEK,oCAAU,GAAhB;;;;;;;wBACE,SAAI;wBAAU,qBAAM,wEAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;;wBAA5D,GAAK,MAAM,GAAG,SAA8C,CAAC;wBAG7D,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;wBACxB,2BAA2B;wBAC3B,cAAc;wBACd,eAAe;wBACf,2BAA2B;wBAC3B,kBAAkB;yBACnB,CAAC,CAAC;wBAEH,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,iFAAkB,CAAC,gBAAgB,EAAE,EAAE,UAAM,MAAM;;;;4CACrE,qBAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE;;wCAA1C,IAAI,GAAG,SAAmC;wCAChD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;4CAC7B,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC;4CAClC,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,2BAA2B,CAAC,CAAC;4CACzE,sBAAO;yCACR;wCAED,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;4CAChC,IAAI,CAAC,mBAAmB,EAAE,CAAC;4CAC3B,sBAAO;yCACR;wCAGK,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wCACnC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;;;;6BACtD,CAAC,CAAC;;;;;KACJ;IAED,iCAAO,GAAP;QACE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IAED,6CAAmB,GAAnB,UAAoB,MAAY,EAAE,IAAU;QAA5C,iBAKC;QALmB,qCAAY;QAAE,iCAAU;QAC1C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;YACf,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC;YAC5B,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAjEU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,8GAAuC;;SAExC,CAAC;+EAQyB,wFAAqB,EAAiB,wEAAc,EAAmB,oDAAM;OAP3F,eAAe,CAkE3B;IAAD,sBAAC;CAAA;AAlE2B","file":"html5-camera-html5-camera-module.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexports.__esModule = true;\nvar ScanbotHTMLFinderConfiguration = /** @class */ (function () {\n    function ScanbotHTMLFinderConfiguration() {\n    }\n    return ScanbotHTMLFinderConfiguration;\n}());\nexports.ScanbotHTMLFinderConfiguration = ScanbotHTMLFinderConfiguration;\nvar ScanbotHTMLCamera = /** @class */ (function () {\n    function ScanbotHTMLCamera() {\n        this.isDetecting = false;\n    }\n    // @ts-ignore\n    ScanbotHTMLCamera.prototype.initialize = function (container) {\n        return __awaiter(this, void 0, void 0, function () {\n            var constraints, stream;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isiOS()) {\n                            throw new Error('ScanbotSDK HTML5 Camera is an Android-only feature');\n                        }\n                        this.container = container;\n                        this.video = document.createElement(\"video\");\n                        this.video.defaultMuted = true;\n                        this.video.autoplay = true;\n                        this.video.setAttribute(\"playsInline\", \"\");\n                        this.video.setAttribute(\"webkit-playsinline\", \"\");\n                        this.video.style.width = \"100%\";\n                        this.video.style.height = \"100%\";\n                        this.video.style.objectFit = \"cover\";\n                        container.appendChild(this.video);\n                        constraints = { video: { facingMode: \"environment\" } };\n                        return [4 /*yield*/, navigator.mediaDevices.getUserMedia(constraints)];\n                    case 1:\n                        stream = _a.sent();\n                        // @ts-ignore\n                        return [4 /*yield*/, new Promise(function (resolve) {\n                                _this.video.onloadedmetadata = resolve;\n                                _this.video.srcObject = stream;\n                                _this.video.width = container.offsetWidth;\n                                _this.video.height = container.offsetHeight;\n                            })];\n                    case 2:\n                        // @ts-ignore\n                        _a.sent();\n                        this.canvas = document.createElement('canvas');\n                        this.canvas.width = this.video.videoWidth;\n                        this.canvas.height = this.video.videoHeight;\n                        this.canvas.style.display = 'none';\n                        this.video.parentElement.appendChild(this.canvas);\n                        this.canvasContext = this.canvas.getContext('2d');\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ScanbotHTMLCamera.prototype.addViewFinder = function (configuration) {\n        // Give video absolute position and size to draw viewfinder on top of it\n        this.video.style.width = this.container.style.width;\n        this.video.style.height = this.container.style.height;\n        this.video.style.position = \"absolute\";\n        this.viewFinderBackground = document.createElement('div');\n        this.viewFinderBackground.className = \"scanbot-camera-overlay\";\n        this.viewFinderBackground.style.backgroundColor = configuration.backgroundColor ? configuration.backgroundColor : \"black\";\n        this.viewFinderBackground.style.opacity = \"0.7\";\n        this.viewFinderBackground.style.position = \"absolute\";\n        this.viewFinderBackground.style.width = this.video.width + \"px\";\n        this.viewFinderBackground.style.height = this.video.height + \"px\";\n        // @ts-ignore\n        this.viewFinderBackground.style.mixBlendMode = \"hard-light\";\n        this.container.appendChild(this.viewFinderBackground);\n        var height = configuration.height ? configuration.height : this.video.height / 3 * 2;\n        var width = configuration.width ? configuration.width : height;\n        var x = configuration.marginLeft ? configuration.marginLeft : this.video.width / 2 - width / 2;\n        var y = configuration.marginTop ? configuration.marginTop : this.video.height / 2 - height / 2;\n        this.viewFinderHole = document.createElement('div');\n        this.viewFinderHole.className = \"scanbot-camera-viewfinder\";\n        this.viewFinderHole.style.width = width + \"px\";\n        this.viewFinderHole.style.height = height + \"px\";\n        this.viewFinderHole.style.marginLeft = x + \"px\";\n        this.viewFinderHole.style.marginTop = y + \"px\";\n        this.viewFinderHole.style.border = configuration.border ? configuration.border : \"solid 2px white\";\n        // Check for undefined, because 0 is falsey, but it's an allowed value\n        this.viewFinderHole.style.borderRadius = ((configuration.borderRadius !== undefined) ? configuration.borderRadius : 10) + \"px\";\n        this.viewFinderHole.style.backgroundColor = \"gray\";\n        this.viewFinderBackground.appendChild(this.viewFinderHole);\n        return this.viewFinderHole;\n    };\n    /**\n     * Public functions\n     */\n    ScanbotHTMLCamera.prototype.dispose = function () {\n        if (!this.video) {\n            return;\n        }\n        this.stopBarcodeDetector();\n        this.video.pause();\n        this.video.removeAttribute('src'); // empty source\n        this.video.removeAttribute('playsInline');\n        this.video.removeAttribute('webkit-playsinline');\n        this.video.load();\n        this.container.removeChild(this.video);\n        this.container.removeChild(this.viewFinderBackground);\n    };\n    ScanbotHTMLCamera.prototype.startBarcodeDetector = function (formats, callback) {\n        var _this = this;\n        this.formats = formats;\n        requestAnimationFrame(function (animCB) {\n            _this.isDetecting = true;\n            _this.sendImageData(callback).then(function (r) {\n                // Nothing to resolve, carry on\n            });\n        });\n    };\n    ScanbotHTMLCamera.prototype.stopBarcodeDetector = function () {\n        this.isDetecting = false;\n    };\n    /**\n     * Static object creator\n     */\n    // @ts-ignore\n    ScanbotHTMLCamera.create = function (container) {\n        return __awaiter(this, void 0, void 0, function () {\n            var camera;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        camera = new ScanbotHTMLCamera();\n                        return [4 /*yield*/, camera.initialize(container)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, camera];\n                }\n            });\n        });\n    };\n    /**\n     * Internal private functions\n     */\n    ScanbotHTMLCamera.prototype.createImageData = function (canvasContext, imageOrVideoElement) {\n        canvasContext.drawImage(imageOrVideoElement, 0, 0, this.video.videoWidth, this.video.videoHeight);\n        var width = this.container.offsetWidth * 1.5;\n        var height = this.container.offsetHeight * 1.5;\n        var x = this.video.videoWidth / 2 - width / 2;\n        var y = this.video.videoHeight / 2 - height / 2;\n        if (this.viewFinderHole) {\n            x += this.domPixelSizeToInt(this.viewFinderHole.style.marginLeft) * 1.5;\n            y += this.domPixelSizeToInt(this.viewFinderHole.style.marginTop) * 1.5;\n            width = this.domPixelSizeToInt(this.viewFinderHole.style.width) * 1.5;\n            height = this.domPixelSizeToInt(this.viewFinderHole.style.height) * 1.5;\n        }\n        return canvasContext.getImageData(x, y, width, height);\n    };\n    ScanbotHTMLCamera.prototype.domPixelSizeToInt = function (size) {\n        return parseInt(size.replace(\"px\", \"\"), 10);\n    };\n    // @ts-ignore\n    ScanbotHTMLCamera.prototype.sendImageData = function (result) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data, imageData, octet;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isDetecting) {\n                            return [2 /*return*/];\n                        }\n                        data = this.createImageData(this.canvasContext, this.video);\n                        if (!this.isiOS()) return [3 /*break*/, 1];\n                        imageData = data.data.buffer;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.Uint8ToStringViaReader(new Uint8Array(data.data))];\n                    case 2:\n                        octet = _a.sent();\n                        imageData = octet;\n                        _a.label = 3;\n                    case 3:\n                        // Uncomment for web debugging\n                        // requestAnimationFrame(() => this.sendImageData(result));\n                        // TODON'T: Do not follow the suggested Add 'import {cordova} from \"@ionic-native/core\"'\n                        // The ionic core import is not correct, we want to use the \"cordova native\" function\n                        // @ts-ignore\n                        cordova.exec(function (success) { return __awaiter(_this, void 0, void 0, function () {\n                            var _this = this;\n                            return __generator(this, function (_a) {\n                                requestAnimationFrame(function () { return _this.sendImageData(result); });\n                                result(success);\n                                return [2 /*return*/];\n                            });\n                        }); }, function (err) {\n                            requestAnimationFrame(function () { return _this.sendImageData(result); });\n                        }, \"ScanbotSdk\", \"detectBarcodesFromBytes\", [data.width, data.height, imageData, this.formats]);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ScanbotHTMLCamera.prototype.Uint8ToStringViaReader = function (u8a) {\n        // @ts-ignore\n        return new Promise(function (resolve) {\n            var r = new FileReader();\n            r.onload = function (ev) { resolve(r.result); };\n            r.readAsBinaryString(new Blob([u8a], { type: \"binary/octet-stream\" }));\n        });\n    };\n    ScanbotHTMLCamera.prototype.isiOS = function () {\n        // @ts-ignore\n        return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n    };\n    return ScanbotHTMLCamera;\n}());\nexports[\"default\"] = ScanbotHTMLCamera;\n// @ts-ignore\nmodule.exports = ScanbotHTMLCamera;\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { Html5CameraPage } from './html5-camera.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Html5CameraPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [Html5CameraPage]\n})\nexport class Html5CameraPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>html5-camera</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n  <div id=\\\"buttonContainer\\\" text-center>\\n    <ion-button color=\\\"success\\\" style=\\\"margin-right: 20px\\\" (click)=\\\"initialize()\\\">INITIALIZE</ion-button>\\n    <ion-button color=\\\"danger\\\"  style=\\\"margin-left: 20px\\\" (click)=\\\"dispose()\\\"    >DISPOSE   </ion-button>\\n  </div>\\n\\n  <div id=\\\"container\\\"></div>\\n\\n  <div id=\\\"foundBarcodeHeader\\\">Found the following barcode:</div>\\n  <div id=\\\"barcodeFormat\\\">{{barcodeFormat}}</div>\\n  <div id=\\\"barcodeText\\\">{{barcodeText}}</div>\\n\\n</ion-content>\\n\"","module.exports = \"#container {\\n  width: 96%;\\n  height: 200px;\\n  margin-left: 2%;\\n  margin-top: 10%;\\n  border: 1px solid gray;\\n  border-radius: 5px;\\n}\\n\\n#foundBarcodeHeader {\\n  margin-top: 20px;\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYXJianlvdGNoYWhhbC9TY2FuYm90L3NjYW5ib3Qtc2RrLWV4YW1wbGUtaW9uaWMvc3JjL2FwcC9odG1sNS1jYW1lcmEvaHRtbDUtY2FtZXJhLnBhZ2Uuc2NzcyIsInNyYy9hcHAvaHRtbDUtY2FtZXJhL2h0bWw1LWNhbWVyYS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSxVQUFBO0VBQ0EsYUFBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtBQ0FGOztBREdBO0VBQ0UsZ0JBQUE7RUFDQSxpQkFBQTtBQ0FGIiwiZmlsZSI6InNyYy9hcHAvaHRtbDUtY2FtZXJhL2h0bWw1LWNhbWVyYS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbiNjb250YWluZXIge1xuICB3aWR0aDogOTYlO1xuICBoZWlnaHQ6IDIwMHB4O1xuICBtYXJnaW4tbGVmdDogMiU7XG4gIG1hcmdpbi10b3A6IDEwJTtcbiAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuXG4jZm91bmRCYXJjb2RlSGVhZGVyIHtcbiAgbWFyZ2luLXRvcDogMjBweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4iLCIjY29udGFpbmVyIHtcbiAgd2lkdGg6IDk2JTtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgbWFyZ2luLWxlZnQ6IDIlO1xuICBtYXJnaW4tdG9wOiAxMCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGdyYXk7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cblxuI2ZvdW5kQmFyY29kZUhlYWRlciB7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufSJdfQ== */\"","import {Component, NgZone, OnInit} from '@angular/core';\nimport ScanbotHTMLCamera from 'cordova-plugin-scanbot-sdk/camera';\nimport {ScanbotSdkDemoService} from '../services/scanbot-sdk-demo.service';\nimport {DialogsService} from '../services/dialogs.service';\nimport {BarcodeListService} from '../services/barcode-list.service';\n// For plugin development/debugging, reference camera directly:\n// import ScanbotHTMLCamera from '../../../plugins/cordova-plugin-scanbot-sdk/camera';\n\n@Component({\n  selector: 'app-html5-camera',\n  templateUrl: './html5-camera.page.html',\n  styleUrls: ['./html5-camera.page.scss'],\n})\nexport class Html5CameraPage implements OnInit {\n\n  public barcodeFormat: string;\n  public barcodeText: string;\n  public container: HTMLElement;\n  public camera: ScanbotHTMLCamera;\n\n  constructor(private sdk: ScanbotSdkDemoService, private alert: DialogsService, private _ngZone: NgZone) {\n      this.showDetectionResult();\n  }\n\n  async ngOnInit() {\n    // 'requestCameraPermission' is a helper function, not required by ScanbotHTMLCamera.\n    // If already have your own logic (e.g. another plugin) to request permission, feel free to do that\n    const permissionResult = await this.sdk.SDK.requestCameraPermission();\n    if (permissionResult.status !== 'OK') {\n      await this._ngZone.run(async () => {\n        await this.alert.showAlert('Camera permission is required to capture video stream', 'Oops!');\n      });\n      return;\n    }\n\n    this.container = document.getElementById('container');\n  }\n\n  async initialize() {\n    this.camera = await ScanbotHTMLCamera.create(this.container);\n\n\n    this.camera.addViewFinder({\n      // backgroundColor: \"blue\",\n      // width: 300,\n      // height: 200,\n      // border: \"5px solid red\",\n      // borderRadius: 0\n    });\n\n    this.camera.startBarcodeDetector(BarcodeListService.getAcceptedTypes(), async result => {\n      const info = await this.sdk.SDK.getLicenseInfo();\n      if (!info.info.isLicenseValid) {\n        this.camera.stopBarcodeDetector();\n        this.showDetectionResult('License expired', 'Barcode detection stopped');\n        return;\n      }\n\n      if (result.barcodes.length === 0) {\n        this.showDetectionResult();\n        return;\n      }\n      // The scan result can contain multiple barcodes,\n      // this example just conveniently displays the first one\n      const barcode = result.barcodes[0];\n      this.showDetectionResult(barcode.type, barcode.text);\n    });\n  }\n\n  dispose() {\n    this.camera.dispose();\n  }\n\n  showDetectionResult(format = '-', text = '-') {\n    this._ngZone.run(() => {\n      this.barcodeFormat = format;\n      this.barcodeText = text;\n    });\n  }\n}\n"],"sourceRoot":""}