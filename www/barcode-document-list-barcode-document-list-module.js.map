{"version":3,"sources":["webpack:///./src/app/barcode-document-list/barcode-document-list.module.ts","webpack:///./src/app/barcode-document-list/barcode-document-list.page.html","webpack:///./src/app/barcode-document-list/barcode-document-list.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACA;AACE;AACwB;AAiBvE;IAAA;IAAyC,CAAC;IAA7B,yBAAyB;QAfrC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC;oBACpB;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,mFAAuB;qBACnC;iBACF,CAAC;aACH;YACD,YAAY,EAAE,CAAC,mFAAuB,CAAC;SACxC,CAAC;OAEW,yBAAyB,CAAI;IAAD,gCAAC;CAAA;AAAJ;;;;;;;;;;;;ACtBtC,6VAA6V,gIAAgI,oBAAoB,eAAe,oBAAoB,oPAAoP,sBAAsB,oEAAoE,8BAA8B,kBAAkB,gDAAgD,kBAAkB,gBAAgB,qBAAqB,eAAe,oBAAoB,uI;;;;;;;;;;;;;;;;;;ACA1+B;AACqC;AAMvF;IAKI,iCAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAHlC,kBAAa,GAAG,EAAE,CAAC;QAIf,IAAI,CAAC,aAAa,GAAG,kGAA0B,CAAC,IAAI,CAAC;QACrD,IAAI,CAAC,kBAAkB,GAAG,kGAA0B,CAAC,kBAAkB,CAAC;IAC5E,CAAC;IAED,0CAAQ,GAAR,UAAS,MAAmB;QACxB,IAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;QAChC,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QACpC,kGAA0B,CAAC,MAAM,CAAC;YAC9B,GAAG,EAAE,GAAG;YACR,KAAK,EAAE,KAAK;SACf,CAAC,CAAC;IACP,CAAC;IAED,iDAAe,GAAf,UAAgB,MAAmB;QAAnC,iBAMC;QALG,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QACpC,kGAA0B,CAAC,kBAAkB,GAAG,KAAK,CAAC;QACtD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;YACZ,KAAI,CAAC,kBAAkB,GAAG,kGAA0B,CAAC,kBAAkB,CAAC;QAC5E,CAAC,CAAC,CAAC;IACP,CAAC;IAzBQ,uBAAuB;QAJnC,+DAAS,CAAC;YACP,QAAQ,EAAE,2BAA2B;YACrC,yIAA8C;SACjD,CAAC;+EAM8B,oDAAM;OALzB,uBAAuB,CA0BnC;IAAD,8BAAC;CAAA;AA1BmC","file":"barcode-document-list-barcode-document-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { BarcodeDocumentListPage } from './barcode-document-list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: BarcodeDocumentListPage\n      }\n    ])\n  ],\n  declarations: [BarcodeDocumentListPage]\n})\n\nexport class BarcodeDocumentListModule { }\n","module.exports = \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>\\n            Accepted Documents\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n    <ion-item style=\\\"display: block;\\\" lines=\\\"none\\\" class=\\\"ion-padding\\\">\\n        <ion-label>Enable Document Filters</ion-label>\\n        <ion-toggle value=\\\"{{isFilteringEnabled}}\\\" checked=\\\"{{isFilteringEnabled}}\\\" (ionChange)=\\\"onEnabledChange($event)\\\"></ion-toggle>\\n    </ion-item>\\n\\n    <ion-item-divider>\\n        <ion-label>Filters</ion-label>\\n    </ion-item-divider>\\n    <li *ngFor=\\\"let documentType of documentTypes\\\" style=\\\"list-style: none; padding-bottom: 32px;\\\" class=\\\"ion-padding\\\">\\n        <ion-item style=\\\"display: block;\\\">\\n            <ion-label>{{documentType.key}}</ion-label>\\n            <ion-toggle value=\\\"{{documentType.key}}\\\" disabled=\\\"{{!isFilteringEnabled}}\\\" checked=\\\"{{documentType.value}}\\\" (ionChange)=\\\"onChange($event)\\\"></ion-toggle>\\n        </ion-item>\\n    </li>\\n\\n</ion-content>\\n\\n<ion-footer>\\n\\n</ion-footer>\\n\"","import { Component, NgZone } from '@angular/core';\nimport { BarcodeDocumentListService } from '../services/barcode-document-list.service';\n\n@Component({\n    selector: 'app-barcode-document-list',\n    templateUrl: 'barcode-document-list.page.html',\n})\nexport class BarcodeDocumentListPage {\n\n    documentTypes = [];\n    isFilteringEnabled: boolean;\n\n    constructor(private ngZone: NgZone) {\n        this.documentTypes = BarcodeDocumentListService.list;\n        this.isFilteringEnabled = BarcodeDocumentListService.isFilteringEnabled;\n    }\n\n    onChange($event: CustomEvent) {\n        const key = $event.detail.value;\n        const value = $event.detail.checked;\n        BarcodeDocumentListService.update({\n            key: key,\n            value: value\n        });\n    }\n\n    onEnabledChange($event: CustomEvent) {\n        const value = $event.detail.checked;\n        BarcodeDocumentListService.isFilteringEnabled = value;\n        this.ngZone.run(() => {\n            this.isFilteringEnabled = BarcodeDocumentListService.isFilteringEnabled;\n        });\n    }\n}\n"],"sourceRoot":""}